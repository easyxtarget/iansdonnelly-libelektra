Hi Everybody!

For the first part of my Plug-In tutorial, I am going to cover the basic overview of an elektra plug-in. This post just explains the basic format and functions of an Elektra plug-in, specifically a storage plug-in (this will be the focus of my tutorial).

All plug-ins use the same basic interface. This interface consists of five basic functions, <a title="elektraPluginOpen" href="http://doc.libelektra.org/api/current/html/group__plugin.html#ga1a72ac76b618943677e00ed7ab50b372" target="_blank">elektraPluginOpen</a>, <a title="elektraPluginGet" href="http://doc.libelektra.org/api/current/html/group__plugin.html#ga2f14a12b205687a31e6fd0645470ec69" target="_blank">elektraPluginGet</a>, <a title="elektraPluginSet" href="http://doc.libelektra.org/api/current/html/group__plugin.html#ga01dd4018e48c3a091cb03940a7a8341f" target="_blank">elektraPluginSet</a>, <a title="elektraPluginError" href="http://doc.libelektra.org/api/current/html/group__plugin.html#gab0f8a88ee9868fb698b4e3040a70e000" target="_blank">elektraPluginError</a>, and <a title="elektraPluginClose" href="http://doc.libelektra.org/api/current/html/group__plugin.html#gaed8aeda2b2beab1b8052f8a64c601754" target="_blank">elektraPluginClose</a>. The developer replaces 'Plugin' with the name of their plugin. So in the case of my plugin, the names of these functions would be elektraLineOpen(), elektraLineGet(), elektraLineSet(), elektraLineError(), and elektraLineClose(). Additionally, there is one more function called <a title="ELEKTRA_PLUGIN_EXPORT" href="http://doc.libelektra.org/api/current/html/group__plugin.html#gabe78724d2d477eef39997fd9b85bff16" target="_blank">ELEKTRA_PLUGIN_EXPORT(Plugin)</a>, where once again 'Plugin" should be replaced with the name of the plug-in, this time in lower-case. So for my line plugin this function would be ELEKTRA_PLUGIN_EXPORT(line).

The KDB class relies on the first five functions for interacting with configuration files stored in the key database.  Calls for kdbGet() and kdbClose() will call the functions elektraPluginGet() and elektraPluginClose() respectively for the plugin that was used to mount the configuration data. kdbSet() calls elektraPluginSet() but also elektraPluginError() when an error occurs. elektraPluginOpen() is called before the first call of kdbGet() or kdbSet(). These functions serve different purposes that allow the plug-in to work.
<ul>
	<li>elektraPluginOpen() is designed to allow each plug-in to do initialization if necessary.</li>
	<li>elektraPluginGet() is designed to turn information from a configuration file into a usable KeySet, this is technically the only function that is REQUIRED in a plug-in.</li>
	<li>elektraPluginSet() is designed to store the information from the keyset back into a configuration file.</li>
	<li>elektraPluginClose() is used to free resources that might be required for the plug-in.</li>
	<li>ELEKTRA_PLUGIN_EXPORT(Plugin) simply lets Elektra know that the plug-in exists and what the name of the above functions are.</li>
</ul>
Most simply put: most plug-ins consist of five major functions, elektraPluginOpen(), elektraPluginClose(), elektraPluginGet(), elektraPluginSet(), and ELEKTRA_EXPORT_PLUGIN(Plugin).

So Part 1 of the tutorial covers the implementation details for a plug-in. Next up will be Part 2, which will cover the theory behind contracts in Elektra as well as how to implement them.

Sincerely,
Ian S. Donnelly
